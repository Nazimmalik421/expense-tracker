{"version":3,"sources":["UI/Card.js","Expenses/ExpensesFilter.js","Expenses/ExpenseDate.js","Expenses/ExpenseItem.js","Expenses/ExpensesList.js","Chart/ChartBar.js","Chart/Chart.js","Expenses/ExpensesChart.js","Expenses/Expenses.js","NewExpense/ExpenseForm.js","NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","onChange","e","onYearChange","target","value","defaultYear","ExpenseDate","year","date","getFullYear","month","toLocaleString","day","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpenseChart","chartDataPoints","expenses","getMonth","Expenses","useState","filterYear","setFilterYear","filteredExpenses","filter","toString","chosenYear","ExpensesChart","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancelClick","NewExpense","isFormVisible","setFormVisible","enteredExpenseData","random","onAddExpense","App","setExpense","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47680d5d.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.css'\r\n\r\nconst Card = (props) => {\r\n\r\n    const classes = 'card ' + props.className\r\n    \r\n    return <div className={classes}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import React from 'react'\r\nimport './expensesFilter.css'\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n    const filterYearChangeHandler = (e) => {\r\n        props.onYearChange(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"expenses-filter\">\r\n            <div className=\"expenses-filter__control\">\r\n                <label>Filter By Year</label>\r\n                <select onChange={filterYearChangeHandler} value={props.defaultYear}>\r\n                    <option value=\"2022\">2022</option>\r\n                    <option value=\"2021\">2021</option>\r\n                    <option value=\"2020\">2020</option>\r\n                    <option value=\"2019\">2019</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpensesFilter;","import React from 'react'\r\nimport './expenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n\r\n    const year = props.date.getFullYear()\r\n    const month = props.date.toLocaleString('en-US', { month: 'long' })\r\n    const day = props.date.toLocaleString('en-US', { day: '2-digit' })\r\n\r\n    return (\r\n        <div className='expense-date'>\r\n            <div className='expense-date__day'>{day}</div>\r\n            <div className='expense-date__month'>{month}</div>\r\n            <div className='expense-date__year'>{year}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseDate;","import React from 'react'\r\nimport './expenseItem.css'\r\nimport ExpenseDate from './ExpenseDate'\r\n\r\n\r\nconst ExpenseItem = (props) => {\r\n\r\n    return (\r\n        <div className='expense-item'>\r\n            <div>\r\n                <ExpenseDate date={props.date} />\r\n            </div>\r\n            <div className='expense-item__description'>\r\n                <h2>{props.title}</h2>\r\n                <div className='expense-item__price'>${props.amount}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseItem;","import React from 'react'\r\nimport ExpenseItem from './ExpenseItem'\r\nimport './expensesList.css'\r\n\r\nconst ExpensesList = (props) => {\r\n\r\n    if (props.items.length === 0) {\r\n        return <h2 className='expenses-list__fallback'>No Expenses found</h2>\r\n    }\r\n\r\n    return (\r\n        <ul className='expenses-list'>\r\n            {props.items.map(expense => {\r\n                return <ExpenseItem title={expense.title} amount={expense.amount} date={expense.date} key={expense.id} />\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ExpensesList;","import React from 'react'\r\nimport './chartBar.css'\r\n\r\n\r\nconst ChartBar = (props) => {\r\n    let barFillHeight = '0%'\r\n\r\n    if (props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n    }\r\n\r\n    return (\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\" style={{ height: barFillHeight }}></div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">{props.label}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartBar;","import React from 'react'\r\nimport ChartBar from './ChartBar'\r\nimport './chart.css'\r\n\r\nconst Chart = (props) => {\r\n\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value)\r\n\r\n    const totalMaximum = Math.max(...dataPointValues)\r\n\r\n    return (\r\n        <div className=\"chart\">\r\n            {props.dataPoints.map(dataPoint => <ChartBar key={dataPoint.label} value={dataPoint.value} maxValue={totalMaximum} label={dataPoint.label} />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React from 'react'\r\nimport Chart from '../Chart/Chart'\r\n\r\nconst ExpenseChart = (props) => {\r\n\r\n    const chartDataPoints = [\r\n        { label: 'Jan', value: 0 },\r\n        { label: 'Feb', value: 0 },\r\n        { label: 'Mar', value: 0 },\r\n        { label: 'Apr', value: 0 },\r\n        { label: 'May', value: 0 },\r\n        { label: 'Jun', value: 0 },\r\n        { label: 'Jul', value: 0 },\r\n        { label: 'Aug', value: 0 },\r\n        { label: 'Sep', value: 0 },\r\n        { label: 'Oct', value: 0 },\r\n        { label: 'Nov', value: 0 },\r\n        { label: 'Dec', value: 0 },\r\n    ]\r\n\r\n    for(const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth()\r\n        chartDataPoints[expenseMonth].value += expense.amount\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints} />\r\n}\r\n\r\nexport default ExpenseChart;","import React, { useState } from 'react'\r\nimport './expenses.css'\r\nimport Card from '../UI/Card'\r\nimport ExpensesFilter from './ExpensesFilter'\r\nimport ExpensesList from './ExpensesList'\r\nimport ExpensesChart from './ExpensesChart'\r\n\r\nconst Expenses = (props) => {\r\n\r\n    const [filterYear, setFilterYear] = useState('2021')\r\n\r\n    const filterYearChangeHandler = (chosenYear) => {\r\n        setFilterYear(chosenYear)\r\n        // console.log(chosenYear)\r\n    }\r\n\r\n    const filteredExpenses = props.items.filter(expense => {\r\n        return expense.date.getFullYear().toString() === filterYear\r\n    })\r\n\r\n    return (\r\n        <li>\r\n            <div>\r\n                <Card className='expenses'>\r\n                    <ExpensesFilter defaultYear={filterYear} onYearChange={filterYearChangeHandler} />\r\n                    <ExpensesChart expenses={filteredExpenses} />\r\n                    <ExpensesList items={filteredExpenses} />\r\n                </Card>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Expenses;\r\n//  {/*✅ 3 ways of displaying content conditionally -> Written below the export line */ }\r\n\r\n// return (\r\n//     <div>\r\n//         <Card className='expenses'>\r\n//             <ExpensesFilter defaultYear={filterYear} onYearChange={filterYearChangeHandler} />\r\n\r\n//             {/*✅ 3 ways of displaying content conditionally */}\r\n\r\n//             {/* First way -> Ternary operator */}\r\n//             {/* {filteredExpenses.length === 0 ? <p>No Expenses to display</p> :\r\n//                 filteredExpenses.map(expense => <ExpenseItem title={expense.title} amount={expense.amount} date={expense.date} key={expense.id} />\r\n//                 )} */}\r\n\r\n//             {/* Second Way ->Short circuiting -> If first condition is met then it will return the last value after &&*/}\r\n//             {/* {filteredExpenses.length === 0 && <p>No Expenses to display</p>}\r\n//             {filteredExpenses.length > 0 && filteredExpenses.map(expense => {\r\n//                 return <ExpenseItem title={expense.title} amount={expense.amount} date={expense.date} key={expense.id} />\r\n//             })} */}\r\n//             {/* Third way -> This approach is recommended as it keeps the JSX lean */}\r\n//             {expensesContent}\r\n//             {/* This is also a good solution but I am passing so much of javaScript into JSX which is not recommended*/}\r\n//             {/* {props.items.filter(expense => expense.date.getFullYear().toString() === filterYear).map(expense => <ExpenseItem title={expense.title} amount={expense.amount} date={expense.date} key={expense.id} />)} */}\r\n//         </Card>\r\n//     </div>\r\n// )","import React, { useState } from 'react'\r\nimport './expenseForm.css'\r\n\r\n\r\n\r\nconst ExpenseForm = (props) => {\r\n\r\n    const [enteredTitle, setEnteredTitle] = useState('')\r\n    const [enteredAmount, setEnteredAmount] = useState('')\r\n    const [enteredDate, setEnteredDate] = useState('')\r\n\r\n\r\n\r\n    const titleChangeHandler = (e) => {\r\n        setEnteredTitle(e.target.value)\r\n        //Whenever your state update depends on the previous state we should use the following function type\r\n        // setEnteredTitle((prevState) => {\r\n        //     return { ...prevState, enteredTitle: e.target.value }\r\n        // })\r\n    }\r\n\r\n    const amountChangeHandler = (e) => {\r\n        setEnteredAmount(e.target.value)\r\n    }\r\n\r\n    const dateChangeHandler = (e) => {\r\n        setEnteredDate(e.target.value)\r\n\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate)\r\n        }\r\n        props.onSaveExpenseData(expenseData)\r\n        setEnteredTitle('')\r\n        setEnteredAmount('')\r\n        setEnteredDate('')\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submitHandler}>\r\n                <div className=\"new-expense__controls\">\r\n                    <div className=\"new-expense__control\">\r\n                        <label>Title</label>\r\n                        <input type=\"text\" onChange={titleChangeHandler} value={enteredTitle} />\r\n                    </div>\r\n                    <div className=\"new-expense__control\">\r\n                        <label>Amount</label>\r\n                        <input type=\"number\" min='0.01' step='0.01' onChange={amountChangeHandler} value={enteredAmount} />\r\n                    </div>\r\n                    <div className=\"new-expense__control\">\r\n                        <label>Date</label>\r\n                        <input type=\"date\" min='2019-01-01' step='2022-12-31' onChange={dateChangeHandler} value={enteredDate} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"new-expense__actions\">\r\n                    <button onClick={props.onCancelClick} type='button'>Cancel</button>\r\n                    <button type='submit'>Add Expense</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default ExpenseForm;\r\n","import React, { useState } from 'react'\r\nimport './newExpense.css'   \r\nimport ExpenseForm from './ExpenseForm'\r\n\r\nconst NewExpense = (props) => {\r\n\r\n    const [isFormVisible, setFormVisible] = useState(false)\r\n\r\n    const saveExpenseDataHandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n            ...enteredExpenseData, id: Math.random().toString()\r\n        }\r\n        props.onAddExpense(expenseData)\r\n        setFormVisible(false)\r\n    }\r\n\r\n    const showFormEditor = () => {\r\n        setFormVisible(true)\r\n    }\r\n\r\n    const hideFormEditor = () => {\r\n        setFormVisible(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"new-expense\">\r\n            { !isFormVisible && <button onClick={showFormEditor}>Add New Expense</button>}\r\n            {isFormVisible && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancelClick={hideFormEditor} />}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default NewExpense;","import React, { useState } from 'react'\nimport Expenses from './Expenses/Expenses'\nimport NewExpense from './NewExpense/NewExpense'\n\n// const dummyExpenses = [\n//   { id: 'e1', title: 'Toilet paper', amount: '94.12', date: new Date(2020, 7, 14) },\n//   { id: 'e2', title: 'New TV', amount: '799', date: new Date(2021, 2, 12) },\n//   { id: 'e3', title: 'Bike Insurace', amount: '52.36', date: new Date(2021, 4, 7) },\n//   { id: 'e4', title: 'New Computer', amount: '1100', date: new Date(2020, 4, 28) },\n//   { id: 'e4', title: 'New Computer', amount: '1100', date: new Date(2019, 10, 19) },\n// ]\n\nfunction App() {\n\n  const [expense, setExpense] = useState([])\n\n  const addExpenseHandler = (expense) => {\n    setExpense(prevExpenses => {\n      return [expense, ...prevExpenses]\n    })\n  }\n\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expense} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}